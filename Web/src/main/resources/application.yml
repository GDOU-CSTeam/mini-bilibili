# 配置JWT相关的密钥
jwt:
  key: ${bili.jwt.key} # JWT密钥
  ttl: ${bili.jwt.ttl} # JWT过期时间

# 配置Knife4j，用于增强Spring Boot API文档的生成和展示
knife4j:
  # 是否启用Knife4j
  enable: true
  # 是否在生产环境启用，用于控制Swagger在生产环境的可见性
  production: false
  # 基础认证配置，用于启用并配置Swagger的基本认证信息
  basic:
    # 是否启用基本认证
    enable: true
    # 用户名
    username: ${bili.knife4j.basic.username}
    #用户密码
    password: ${bili.knife4j.basic.password}
  # 设置配置，用于配置Knife4j的显示和其他设置
  setting:
    # 设置语言，用于设置Knife4j界面的语言
    language: zh_cn


# 配置日志相关的设置
logging:
  # 指定日志配置文件的位置
  config: classpath:logback-spring.xml
  file:
    # 日志文件名
    name: slf4j-SpringTest
    # 日志文件保存的路径
    path: ./logs
  level:
    # 设置包的日志级别
    com:
      example:
        demo:
          mapper: debug
    # 设置根日志级别的日志输出级别
    root: info
  logback:
    rollingpolicy:
      # 设置日志文件最大大小
      max-file-size: 1000MB
      # 设置保留的日志文件最大数量
      max-history: 7


# Mybatis-Plus配置
mybatis-plus:
  # 数据库映射行为配置
  configuration:
    # 开启自动映射，将数据库字段自动映射到Java属性
    auto-mapping-behavior: full
    # 设置日志实现类为控制台输出
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 开启下划线到驼峰式命名的自动转换
    map-underscore-to-camel-case: true
  # Mapper接口位置配置
  mapper-locations: classpath*:mapper/*.xml
  global-config:
    db-config:
      logic-delete-field: deleted # 全局逻辑删除字段名
      logic-delete-value: 1 # 逻辑已删除值
      logic-not-delete-value: 0 # 逻辑未删除值


# 配置服务器的相关设置
server:
  # 设置服务器监听的端口号
  port: 8081
  # 配置Servlet相关的设置
  servlet:
    # 设置会话的超时时间，单位为秒
    session:
      timeout: 1800


# 配置Snowflake算法的相关参数，用于生成分布式ID
snowflake:
  datacenterId: 1
  workerId: 1

# 配置Spring应用的名称和其他相关设置
spring:
  profiles:
    active: dev
  application:
    name: bili # 应用名称
  data:
    redis: # Redis配置
      host:  ${bili.redis.host} # Redis服务器主机名
      port: ${bili.redis.port} # Redis服务器端口
      password: ${bili.redis.password} # Redis服务器密码
      database: ${bili.redis.database} # Redis数据库索引
      lettuce:
        pool: # Lettuce客户端连接池配置
          max-active: 32 # 最大活动连接数
          max-idle: 16 # 最大空闲连接数
          min-idle: 8 # 最小空闲连接数

  datasource: # 数据源配置
    driver-class-name: ${bili.datasource.driver-class-name} # JDBC驱动类名
    username: ${bili.datasource.username} # 数据库用户名
    password: ${bili.datasource.password} # 数据库密码
    url: jdbc:mysql://${bili.datasource.host}:${bili.datasource.port}/${bili.datasource.database}?serverTimezone=UTC&characterEncoding=UTF-8&useUnicode=true&useSSL=false # 数据库连接URL

  elasticsearch: # Elasticsearch配置
    uris: ${bili.elasticsearch.uris} # Elasticsearch节点URI

  rabbitmq: # RabbitMQ配置
    host: ${bili.rabbitmq.host} # RabbitMQ服务器主机名
    port: ${bili.rabbitmq.port} # RabbitMQ服务器端口
    username: ${bili.rabbitmq.username} # RabbitMQ服务器用户名
    password: ${bili.rabbitmq.password} # RabbitMQ服务器密码
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 3000

  mail: # 邮件服务配置
    default-encoding: UTF-8 # 默认编码
    host: ${bili.mail.host} # SMTP服务器主机名
    username: ${bili.mail.username} # SMTP服务器用户名
    password: ${bili.mail.password} # SMTP服务器密码
    properties: # 邮件发送属性
      mail:
        smtp:
          auth: true # 启用SMTP认证
          starttls:
            enable: true # 启用TLS
            required: true # TLS必需

  mvc: # Spring MVC配置
    static-path-pattern: /** # 静态资源路径模式

  servlet: # Servlet配置
    multipart: # 多部分文件上传配置
      max-file-size: 1024MB # 最大文件大小


  web: # Web配置
    resources: # 资源处理配置
      static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/,classpath:/public/,classpath:/itstyle/ # 静态资源位置

# 配置SpringDoc，用于开放API文档
springdoc:
  # 配置API文档的访问路径
  api-docs:
    path: /v3/api-docs
  # 配置API分组，这里设置了默认分组并指定了包扫描路径和路径匹配规则
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.bili
  # 配置Swagger UI的相关设置
  swagger-ui:
    # 设置操作排序方式为字母顺序
    operations-sorter: alpha
    # 设置Swagger UI的访问路径
    path: /swagger-ui.html
    # 设置标签排序方式为字母顺序
    tags-sorter: alpha

# 配置阿里云对象存储（OSS）的访问信息
oss:
  # OSS Endpoint，用于指定访问的区域节点
  endpoint: ${bili.oss.endpoint}
  # AccessKey ID，用于身份验证的密钥ID
  accessKeyId: ${bili.oss.accessKeyId}
  # AccessKey Secret，用于身份验证的密钥Secret
  accessKeySecret: ${bili.oss.accessKeySecret}
  # 角色ARN，用于指定扮演的角色
  roleArn: ${bili.oss.roleArn}
  # 角色会话名称，用于标识角色会话的名称
  roleSessionName: ${bili.oss.roleSessionName}
  # OSS Endpoint，用于直接访问OSS的节点
  endpointForOss: ${bili.oss.endpointForOss}
  # 存储桶名称，用于指定要操作的OSS存储桶
  bucketName: ${bili.oss.bucketName}

